<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Rybs/gYrUVxLflZaGAAAAABJRU5ErkJggg==
</value>
  </data>
</root>